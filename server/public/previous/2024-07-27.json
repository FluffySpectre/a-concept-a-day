{
  "name": "Sweep Line Algorithm",
  "summary": "A method for solving geometric problems involving points, lines, and circles by processing events in a particular order.",
  "step_description": "<ol>1. Preprocess the input to create an event list of all relevant points (e.g., intersection points of edges), sorted by their x-coordinate.<br>2. Initialize the sweep line at negative infinity and start iterating through the event list, updating the sweep line as necessary (i.e., moving it to a new position when a point is encountered).<br>3. For each event in the list, perform any required calculations or operations (e.g., checking for intersections or calculating distances) using the current state of the sweep line.<br>4. Repeat steps 2 and 3 until all events have been processed.<br></ol>",
  "example": "A game that features a scrolling background with obstacles, such as platforms or enemies, which need to be intersected by the player's character. The Sweep Line Algorithm can be used to efficiently determine the order in which these intersections occur, allowing for accurate collision detection and response.",
  "coding_example": "class Event:\n    def __init__(self, time, x):\n        self.time = time\n        self.x = x\n\n\nclass SweepLineAlgorithm:\n    def __init__(self, events):\n        self.events = sorted(events)\n\n    def sweep_line(self):\n        # Initialize sweep line\n        s = {}\n\n        for e in self.events:\n            # Process all points with same x value\n            if e.x not in s:\n                s[e.x] = []\n            # Add event to list of active intervals at position x\n            s[e.x].append(e)\n\n        # Iterate through sorted x values and process events\n        for x in range(min(s.keys()), max(s.keys()) + 1):\n            if x in s:\n                # Process all active events at current x value\n                for e in s[x]:\n                    print(f\"Event: {e.time}, Point: ({x},{e.x})\")\n\n# Example usage:\nevents = [\n    Event(3, 6),\n    Event(2, 8),\n    Event(1, 9),\n    Event(4, 7),\n    Event(5, 5),\n]\n\nalgorithm = SweepLineAlgorithm(events)\nalgorithm.sweep_line()",
  "date": 1722124549.801242
}